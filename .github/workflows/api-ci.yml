name: API CI  # ciclo de integraciÃ³n continuo de nuestra api

on:
  push: 
    paths:
      - "./api/**"
      - ".github/workflows/api-ci.yml"

defaults:
  run:
    working-directory: ./api

jobs:
  linter:
    name: Run Linter
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: ./api/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

  unit-test:
    name: Run Unit Tests
    runs-on: macos-latest
    steps:  
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: ./api/package-lock.json  # instala dependencias

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test

  e2e:
    name: Run E2E Tests
    runs-on: ubuntu-latest   # ðŸ‘‰ tiene soporte para Docker services

    services:
      mongo-e2e:
        image: mongo:6.0
        ports:
          - 27018:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: test
          MONGO_INITDB_ROOT_PASSWORD: test123
          MONGO_INITDB_DATABASE: demo_e2e

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: ./api/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run E2E tests
        env:
          MONGO_DB_NAME: demo
          MONGO_URL: mongodb://test:test123@mongo-e2e:27017/demo_e2e?authSource=admin
        run: npm run test:e2e
s