name: API CI

on:
  push:
    paths:
      - "api/**"
      - ".github/workflows/api-ci.yml"

defaults:
  run:
    working-directory: ./api

jobs:
  # ------------------------------
  # 1Ô∏è‚É£ Linter
  # ------------------------------
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npm run lint || true

  # ------------------------------
  # 2Ô∏è‚É£ Unit Tests
  # ------------------------------
  unit-test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npm run test

  # ------------------------------
  # 3Ô∏è‚É£ E2E Tests (MongoDB service)
  # ------------------------------
  e2e:
    runs-on: ubuntu-latest
    needs: unit-test

    services:
      mongo-e2e:
        image: mongo:5.0
        env:
          MONGO_INITDB_ROOT_USERNAME: test
          MONGO_INITDB_ROOT_PASSWORD: test123
          MONGO_INITDB_DATABASE: demo_e2e
        ports:
          - 27017:27017

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm ci

      # üîπ Instala mongosh para ping
      - name: Install mongosh
        run: |
          curl -fsSL https://pgp.mongodb.com/server-5.0.asc | gpg --dearmor | sudo tee /usr/share/keyrings/mongodb-server-5.0.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/mongodb-server-5.0.gpg] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/5.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh

      # üîπ Espera MongoDB (max 60 minutos, retry cada 20s)
      - name: Wait for MongoDB
        run: |
          echo "‚è≥ Waiting for MongoDB (max 60 minutes)..."
          for i in {1..180}; do   # 180 * 20s = 3600s = 60 min
            mongosh "mongodb://test:test123@mongo-e2e:27017/demo_e2e?authSource=admin&retryWrites=false" --eval "db.adminCommand('ping')" && echo "‚úÖ MongoDB ready!" && exit 0
            echo "Mongo not ready yet... retry ($i/180)"
            sleep 20
          done
          echo "‚ùå MongoDB did not start in 60 minutes"
          exit 1

      # üîπ Ejecuta tests E2E
      - name: Run E2E tests
        env:
          MONGO_DB_NAME: demo_e2e
          MONGO_URL: mongodb://test:test123@mongo-e2e:27017/demo_e2e?authSource=admin&retryWrites=false
        run: npm run test:e2e
